//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: comment_api.proto

package api

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"

	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommentReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemName      string                 `protobuf:"bytes,1,opt,name=ItemName,proto3" json:"ItemName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentReq) Reset() {
	*x = CommentReq{}
	mi := &file_comment_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentReq) ProtoMessage() {}

func (x *CommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_comment_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentReq.ProtoReflect.Descriptor instead.
func (*CommentReq) Descriptor() ([]byte, []int) {
	return file_comment_api_proto_rawDescGZIP(), []int{0}
}

func (x *CommentReq) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

type CommentResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentResp) Reset() {
	*x = CommentResp{}
	mi := &file_comment_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResp) ProtoMessage() {}

func (x *CommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_comment_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResp.ProtoReflect.Descriptor instead.
func (*CommentResp) Descriptor() ([]byte, []int) {
	return file_comment_api_proto_rawDescGZIP(), []int{1}
}

func (x *CommentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_comment_api_proto protoreflect.FileDescriptor

const file_comment_api_proto_rawDesc = "" +
	"\n" +
	"\x11comment_api.proto\x12+org.apache.dubbogo.samples.shop.comment.api\"(\n" +
	"\n" +
	"CommentReq\x12\x1a\n" +
	"\bItemName\x18\x01 \x01(\tR\bItemName\"\x1f\n" +
	"\vCommentResp\x12\x10\n" +
	"\x03Msg\x18\x01 \x01(\tR\x03Msg2\x8d\x01\n" +
	"\aComment\x12\x81\x01\n" +
	"\n" +
	"GetComment\x127.org.apache.dubbogo.samples.shop.comment.api.CommentReq\x1a8.org.apache.dubbogo.samples.shop.comment.api.CommentResp\"\x00B>Z<github.com/apache/dubbo-go-samples/task/shop/comment/api;apib\x06proto3"

var (
	file_comment_api_proto_rawDescOnce sync.Once
	file_comment_api_proto_rawDescData []byte
)

func file_comment_api_proto_rawDescGZIP() []byte {
	file_comment_api_proto_rawDescOnce.Do(func() {
		file_comment_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comment_api_proto_rawDesc), len(file_comment_api_proto_rawDesc)))
	})
	return file_comment_api_proto_rawDescData
}

var file_comment_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_comment_api_proto_goTypes = []any{
	(*CommentReq)(nil),  // 0: org.apache.dubbogo.samples.shop.comment.api.CommentReq
	(*CommentResp)(nil), // 1: org.apache.dubbogo.samples.shop.comment.api.CommentResp
}
var file_comment_api_proto_depIdxs = []int32{
	0, // 0: org.apache.dubbogo.samples.shop.comment.api.Comment.GetComment:input_type -> org.apache.dubbogo.samples.shop.comment.api.CommentReq
	1, // 1: org.apache.dubbogo.samples.shop.comment.api.Comment.GetComment:output_type -> org.apache.dubbogo.samples.shop.comment.api.CommentResp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_comment_api_proto_init() }
func file_comment_api_proto_init() {
	if File_comment_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comment_api_proto_rawDesc), len(file_comment_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comment_api_proto_goTypes,
		DependencyIndexes: file_comment_api_proto_depIdxs,
		MessageInfos:      file_comment_api_proto_msgTypes,
	}.Build()
	File_comment_api_proto = out.File
	file_comment_api_proto_goTypes = nil
	file_comment_api_proto_depIdxs = nil
}
