apiVersion: service.dubbo.apache.org/v1alpha1
kind: VirtualService
metadata:
  name: demo-route
spec:
  hosts:
    - demo  # app name, match to hosts in destination rule
  dubbo:
    - service: # this service doesn't match
        - exact: com.taobao.hsf.demoService:1.0.0
        - exact: com.taobao.hsf.demoService:2.0.0
      routedetail: # router detail isn't used because the service mentioned above doesn't match
        - name: sayHello-String-method-route
          match:
            - method:
                name_match:
                  exact: "sayHello"
          route:
            - destination:
                host: demo
                subset: v1
                fallback:
                  destination:
                    host: demo
                    subset: v2
                    fallback:
                      destination:
                        host: demo
                        subset: v3

        - name: sayHello-method-route
          match:
            - method:
                name_match:
                  exact: "s-method"
          route:
            - destination:
                host: demo
                subset: v2
                fallback:
                  destination:
                    host: demo
                    subset: v3
        - name: some-method-route
          match:
            - method:
                name_match:
                  exact: "some-method"
          route:
            - destination:
                host: demo
                subset: v4
        - name: final
          match:
            - method:
                name_match:
                  exact: "GetUser"

          route:
            - destination:
                host: demo
                subset: v1
                fallback:
                  destination:
                    host: demo
                    subset: v2
                    fallback:
                      destination:
                        host: demo
                        subset: v3
            - destination:
                host: demo
                subset: v3
                fallback:
                  destination:
                    host: demo
                    subset: v2
                    fallback:
                      destination:
                        host: demo
                        subset: v1
    - service: # the second service interface name is match
        - exact: com.taobao.hsf.demoService:1.0.0
        - exact: org.apache.dubbo.UserProvider
      routedetail:
        - name: sayHello-String-method-route
          match:
            - method:
                name_match:
                  exact: "sayHello" # doesn't match
          route:
            - destination:
                host: demo
                subset: v1
                fallback:
                  destination:
                    host: demo
                    subset: v2
                    fallback:
                      destination:
                        host: demo
                        subset: v3

        - name: sayHello-method-route
          match:
            - method:
                name_match: # doesn't match
                  exact: "s-method"
          route:
            - destination:
                host: demo
                subset: v2
                fallback:
                  destination:
                    host: demo
                    subset: v3
        - name: some-method-route
          match:
            - method:
                name_match:
                  exact: "some-method"
          route:
            - destination:
                host: demo
                subset: v4
        - name: final
          match:
            - method:
                name_match:
                  exact: "GetUser" # match!
                argc: 1 # 1 is true, as your GetUser only have one param(ctx is not including)
          route:
            - destination:
                host: demo
                subset: v1 # destination rule of v1 is empty, there isn't target invoker
                fallback:
                  destination:
                    host: demo
                    subset: v2 # this subset is used
                    weight: 9 # this weight is used to calculate weight with 9%
                    fallback:
                      destination:
                        host: demo
                        subset: v3
            - destination:
                host: demo
                subset: v3 # destination rule of v3 is empty, there isn't target invoker
                fallback:
                  destination:
                    host: demo
                    subset: v2 # this subset is used
                    weight: 91 # this weight is used to calculate weight with 91%
                    fallback:
                      destination:
                        host: demo
                        subset: v1
        - name: default #  you can add a finally fallback router with 'match' field, which can match any condition
          route:
            - destination:
                host: demo
                subset: v1
                fallback:
                  destination:
                    host: demo
                    subset: v2
                    fallback:
                      destination:
                        host: demo
                        subset: v3
            - destination:
                host: demo
                subset: v3
                fallback:
                  destination:
                    host: demo
                    subset: v2
                    fallback:
                      destination:
                        host: demo
                        subset: v1