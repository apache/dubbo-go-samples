name: CI

on:
  push:
    branches:
      - main
      - "release-*"
      - "feature-*"
  pull_request:
    branches: ["*"]

jobs:
  license:
    name: Check License Header
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check License Header
        uses: apache/skywalking-eyes/header@main #NOSONAR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config: .licenserc.yaml
          mode: check

  CI:
    name: ${{ matrix.os }} - Go ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      # If you want to matrix build, you can append the following list.
      matrix:
        go_version:
          - "1.23"
        os:
          - ubuntu-latest

    env:
      DING_TOKEN: ${{ secrets.DING_TOKEN }}
      DING_SIGN: ${{ secrets.DING_SIGN }}

    steps:
      - name: Setup Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}

      - name: Checkout
        uses: actions/checkout@v4.0.0

      - name: Cache dependencies
        # ref: https://github.com/actions/cache/blob/main/examples.md#go---module
        uses: actions/cache@v4
        with:
          # Cache, works only on Linux
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          # Cache key
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check Code Format
        run: make fmt && git status && [[ -z `git status -s` ]]

      - name: Lint
        run: make lint

      - name: Set Go version again to override skywalking
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}

      - name: Check Go version
        run: |
          go version

      - name: Switch Dubbo-go version
        run: |
          # Acquire information of branch
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            BRANCH=${{github.base_ref}}
          elif [ "$GITHUB_EVENT_NAME" == "push" ]; then
            BRANCH=$GITHUB_REF_NAME
          else
            echo "$GITHUB_EVENT_NAME event is unsupported right now"
            exit 1
          fi
          echo "EVENT = $GITHUB_EVENT_NAME, BRANCH = $BRANCH"
          # Edit the version
          go mod edit -replace=dubbo.apache.org/dubbo-go/v3=dubbo.apache.org/dubbo-go/v3@$BRANCH
          go mod tidy

      - name: Integration Test
        run: |
          ./start_integrate_test.sh
